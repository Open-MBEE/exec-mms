{
	"info": {
		"_postman_id": "83c02ec5-771f-4414-9675-5989af423702",
		"name": "crud",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "login using admin",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e461c018-db96-4ae9-8552-ea794604e7c9",
						"exec": [
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    ",
							"});",
							"",
							"pm.test(\"response has token\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.token).to.be.a('string');",
							"    pm.environment.set(\"token\", jsonData.token);",
							"",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"username\": \"{{adminUsername}}\",\n\t\"password\": \"{{adminPassword}}\"\n}"
				},
				"url": {
					"raw": "{{host}}/authentication",
					"host": [
						"{{host}}"
					],
					"path": [
						"authentication"
					]
				}
			},
			"response": []
		},
		{
			"name": "add org a",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "523b4238-18ab-457b-8aad-af0c45cd7298",
						"exec": [
							"pm.test(\"response has org a\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.orgs[0].id).to.eql('a');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"orgs\": [\n\t\t{\n\t\t\t\"id\": \"a\",\n\t\t\t\"name\": \"a\"\n\t\t}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/orgs",
					"host": [
						"{{host}}"
					],
					"path": [
						"orgs"
					]
				}
			},
			"response": []
		},
		{
			"name": "get orgs",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3eaaac55-3d76-45dc-8913-665359597d55",
						"exec": [
							"pm.test(\"response has at least 1 org\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.orgs.length).to.be.at.least(1);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/orgs",
					"host": [
						"{{host}}"
					],
					"path": [
						"orgs"
					]
				}
			},
			"response": []
		},
		{
			"name": "add project aa",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "edaf2d75-3139-4dee-9c27-011d342127db",
						"exec": [
							"pm.test(\"response has project aa\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.projects[0].id).to.eql('aa');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"projects\": [\n\t\t{\n\t\t\t\"id\": \"aa\", \n\t\t\t\"name\": \"aa\",\n\t\t\t\"orgId\": \"a\",\n\t\t\t\"schema\": \"default\"\n\t\t}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/projects",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects"
					]
				}
			},
			"response": []
		},
		{
			"name": "try to add invalid project",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0a2a87fa-9bbf-4543-9375-a7fef902f76c",
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"projects\": [\n\t\t{\n\t\t\t\"id\": \"invalid project\", \n\t\t\t\"name\": \"invalid project\",\n\t\t\t\"orgId\": \"a\",\n\t\t\t\"schema\": \"default\"\n\t\t}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/projects",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects"
					]
				}
			},
			"response": []
		},
		{
			"name": "get projects",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8e0473f9-66d1-4f32-8ff0-265a6e359490",
						"exec": [
							"pm.test(\"response has at least 1 project\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.projects.length).to.be.at.least(1);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/projects",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects"
					]
				}
			},
			"response": []
		},
		{
			"name": "update project aa metadata",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "fa11f100-64f3-4a2c-bcb1-ed44e1f47253",
						"exec": [
							"pm.test(\"response has project aa\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.projects[0].id).to.eql('aa');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"projects\": [\n\t\t{\n\t\t\t\"id\": \"aa\", \n\t\t\t\"extraField\": \"something\"\n\t\t}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/projects",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects"
					]
				}
			},
			"response": []
		},
		{
			"name": "get project aa",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1733a3bc-a43d-49b6-863a-cf2b899368df",
						"exec": [
							"pm.test(\"response has project aa with extra field\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.projects[0].extraField).to.eql('something');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/projects/aa",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa"
					]
				}
			},
			"response": []
		},
		{
			"name": "add elements to aa",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5734965a-24fd-45ee-b6f9-3cafb777208a",
						"exec": [
							"pm.test(\"response has elements\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.elements.length).to.eql(3);",
							"});",
							"",
							"pm.environment.set(\"commitId1\", pm.response.json().elements[0]._commitId);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"elements\": [\n\t\t{\n\t\t\t\"id\": \"x\",\n\t\t\t\"name\": \"x\"\n\t\t}, {\n\t\t\t\"id\": \"y\", \n\t\t\t\"name\": \"y\"\n\t\t}, {\n\t\t\t\"id\": \"z\",\n\t\t\t\"name\": \"z\"\n\t\t}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/projects/aa/refs/master/elements",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs",
						"master",
						"elements"
					]
				}
			},
			"response": []
		},
		{
			"name": "update x",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "90d2953d-b3a9-49e6-a341-ab7d26ea5bd4",
						"exec": [
							"pm.test(\"response has elements\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.elements.length).to.eql(1);",
							"});",
							"",
							"pm.environment.set(\"commitId2\", pm.response.json().elements[0]._commitId);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"elements\": [\n\t\t{\n\t\t\t\"id\": \"x\",\n\t\t\t\"name\": \"updated1\"\n\t\t}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/projects/aa/refs/master/elements",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs",
						"master",
						"elements"
					]
				}
			},
			"response": []
		},
		{
			"name": "update x and y",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5108608d-d411-4eb9-ad4a-a385e2bc35e6",
						"exec": [
							"pm.test(\"response has elements\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.elements.length).to.eql(2);",
							"});",
							"",
							"pm.environment.set(\"commitId3\", pm.response.json().elements[0]._commitId);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"elements\": [\n\t\t{\n\t\t\t\"id\": \"x\",\n\t\t\t\"name\": \"updated2\"\n\t\t},\n\t\t{\n\t\t\t\"id\": \"y\",\n\t\t\t\"name\": \"updated2\"\n\t\t}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/projects/aa/refs/master/elements",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs",
						"master",
						"elements"
					]
				}
			},
			"response": []
		},
		{
			"name": "update z",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "da640696-721b-4d24-bf14-be712a3c251d",
						"exec": [
							"pm.test(\"response has elements\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.elements.length).to.eql(1);",
							"});",
							"",
							"pm.environment.set(\"commitId4\", pm.response.json().elements[0]._commitId);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"elements\": [\n\t\t{\n\t\t\t\"id\": \"z\",\n\t\t\t\"name\": \"updated3\"\n\t\t}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/projects/aa/refs/master/elements",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs",
						"master",
						"elements"
					]
				}
			},
			"response": []
		},
		{
			"name": "check ref commit history",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7482648e-a716-47e3-a291-73881ee89515",
						"exec": [
							"pm.test(\"response has 4 commits\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.commits.length).to.eql(4);",
							"});",
							"",
							"pm.test(\"commit history is right\", function() {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.commits[0].id).to.eql(pm.environment.get(\"commitId4\"))",
							"    pm.expect(jsonData.commits[1].id).to.eql(pm.environment.get(\"commitId3\"))",
							"    pm.expect(jsonData.commits[2].id).to.eql(pm.environment.get(\"commitId2\"))",
							"    pm.expect(jsonData.commits[3].id).to.eql(pm.environment.get(\"commitId1\"))",
							"})",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/projects/aa/refs/master/commits",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs",
						"master",
						"commits"
					]
				}
			},
			"response": []
		},
		{
			"name": "check x commit history",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0807c98f-e9a9-4c50-9f26-57d40781b0a9",
						"exec": [
							"pm.test(\"response has 3 commits\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.commits.length).to.eql(3);",
							"});",
							"",
							"pm.test(\"commit history is right\", function() {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.commits[0].id).to.eql(pm.environment.get(\"commitId3\"))",
							"    pm.expect(jsonData.commits[1].id).to.eql(pm.environment.get(\"commitId2\"))",
							"    pm.expect(jsonData.commits[2].id).to.eql(pm.environment.get(\"commitId1\"))",
							"})",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/projects/aa/refs/master/elements/x/commits",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs",
						"master",
						"elements",
						"x",
						"commits"
					]
				}
			},
			"response": []
		},
		{
			"name": "check y commit history",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e9a7cd38-9443-452f-ab4e-10a015563228",
						"exec": [
							"pm.test(\"response has 2 commits\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.commits.length).to.eql(2);",
							"});",
							"",
							"pm.test(\"commit history is right\", function() {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.commits[0].id).to.eql(pm.environment.get(\"commitId3\"))",
							"    pm.expect(jsonData.commits[1].id).to.eql(pm.environment.get(\"commitId1\"))",
							"})",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/projects/aa/refs/master/elements/y/commits",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs",
						"master",
						"elements",
						"y",
						"commits"
					]
				}
			},
			"response": []
		},
		{
			"name": "check z commit history",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "42f760d7-9177-4112-9902-6920419f4815",
						"exec": [
							"pm.test(\"response has 2 commits\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.commits.length).to.eql(2);",
							"});",
							"",
							"pm.test(\"commit history is right\", function() {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.commits[0].id).to.eql(pm.environment.get(\"commitId4\"))",
							"    pm.expect(jsonData.commits[1].id).to.eql(pm.environment.get(\"commitId1\"))",
							"})",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/projects/aa/refs/master/elements/z/commits",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs",
						"master",
						"elements",
						"z",
						"commits"
					]
				}
			},
			"response": []
		},
		{
			"name": "check first commit",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "90832c91-7b3f-484b-99d5-2a22411a0782",
						"exec": [
							"pm.test(\"first commit has 3 added\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.commits[0].added.length).to.eql(3);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/projects/aa/commits/{{commitId1}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"commits",
						"{{commitId1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "get elements at second update",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "405c0a55-b089-42c0-ae0f-bf62903e9114",
						"exec": [
							"pm.test(\"elements have expected names\", function () {",
							"    var jsonData = pm.response.json();",
							"    for (var e in jsonData.elements) {",
							"        var el = jsonData.elements[e];",
							"        if (el.id == 'x') {",
							"            pm.expect(el.name == 'updated2');",
							"        }",
							"        if (el.id == 'y') {",
							"            pm.expect(el.name == 'updated2');",
							"        }",
							"        if (el.id == 'z') {",
							"            pm.expect(el.name == 'z');",
							"        }",
							"    }",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"elements\": [\n\t\t{\n\t\t\t\"id\": \"x\"\n\t\t},\n\t\t{\n\t\t\t\"id\": \"y\"\n\t\t}, {\n\t\t\t\"id\": \"z\"\n\t\t}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/projects/aa/refs/master/elements?commitId={{commitId3}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs",
						"master",
						"elements"
					],
					"query": [
						{
							"key": "commitId",
							"value": "{{commitId3}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "create branch refa",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4ff8a308-edb9-4035-be10-7ee850e81b1d",
						"exec": [
							"pm.test(\"branch created with right parentRef and commit id\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.refs[0].id).to.eql('refa');",
							"    pm.expect(jsonData.refs[0].parentRefId).to.eql('master');",
							"    pm.expect(jsonData.refs[0].parentCommitId).to.eql(pm.environment.get(\"commitId4\"))",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"refs\": [\n\t\t{\n\t\t\t\"id\": \"refa\",\n\t\t\t\"name\": \"refa\",\n\t\t\t\"type\": \"Branch\",\n\t\t\t\"extraField\": \"something\"\n\t\t}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/projects/aa/refs",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs"
					]
				}
			},
			"response": []
		},
		{
			"name": "get branch refa",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4314629f-5f7b-4848-bfc1-4855b548c13f",
						"exec": [
							"pm.test(\"branch refa has extraField\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.refs[0].extraField).to.eql('something');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/projects/aa/refs/refa",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs",
						"refa"
					]
				}
			},
			"response": []
		},
		{
			"name": "create invalid branch",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "058cd4ef-fbfb-40f6-b11a-51f0decb4ad7",
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"refs\": [\n\t\t{\n\t\t\t\"id\": \"invalid branch id\",\n\t\t\t\"name\": \"invalid branch\",\n\t\t\t\"type\": \"Branch\"\n\t\t}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/projects/aa/refs",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs"
					]
				}
			},
			"response": []
		},
		{
			"name": "create branch ref-a",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "579a59ee-097c-4006-84cd-03148c3cf0cb",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"refs\": [\n\t\t{\n\t\t\t\"id\": \"ref-a\",\n\t\t\t\"name\": \"ref-a\",\n\t\t\t\"type\": \"Branch\"\n\t\t}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/projects/aa/refs",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs"
					]
				}
			},
			"response": []
		},
		{
			"name": "create branch ref-b from ref-a",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "48e8c19e-4aa8-4a96-9ae4-5e4a7d1e5a62",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"refs\": [\n\t\t{\n\t\t\t\"id\": \"ref-b\",\n\t\t\t\"name\": \"ref-b\",\n\t\t\t\"type\": \"Branch\",\n\t\t\t\"parentRefId\": \"ref-a\"\n\t\t}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/projects/aa/refs",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs"
					]
				}
			},
			"response": []
		},
		{
			"name": "check inRefIds",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7cca3a7a-4b10-4051-addd-c902cb6f5400",
						"exec": [
							"pm.test(\"elements in new ref have right _inRefIds\", function () {",
							"    var jsonData = pm.response.json();",
							"    jsonData.elements.forEach(function(e) {",
							"        pm.expect(e._inRefIds).to.include('refa');",
							"    })",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/projects/aa/refs/refa/elements",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs",
						"refa",
						"elements"
					]
				}
			},
			"response": []
		},
		{
			"name": "update x and y on refa",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a2143942-d897-4a4f-a629-bfa46a7dc505",
						"exec": [
							"pm.test(\"response has elements\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.elements.length).to.eql(2);",
							"});",
							"",
							"pm.environment.set(\"commitXYRef\", pm.response.json().elements[0]._commitId);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"elements\": [\n\t\t{\n\t\t\t\"id\": \"x\",\n\t\t\t\"name\": \"updated4\"\n\t\t},\n\t\t{\n\t\t\t\"id\": \"y\",\n\t\t\t\"name\": \"updated4\"\n\t\t}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/projects/aa/refs/refa/elements",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs",
						"refa",
						"elements"
					]
				}
			},
			"response": []
		},
		{
			"name": "update z on refa and add element q",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1f6b9962-67de-44a8-a812-b25f42a8d077",
						"exec": [
							"pm.test(\"response has elements\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.elements.length).to.eql(2);",
							"});",
							"",
							"pm.environment.set(\"commitZQRef\", pm.response.json().elements[0]._commitId);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"elements\": [\n\t\t{\n\t\t\t\"id\": \"z\",\n\t\t\t\"name\": \"updated5\"\n\t\t},\n\t\t{\n\t\t\t\"id\": \"q\",\n\t\t\t\"name\": \"q\"\n\t\t}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/projects/aa/refs/refa/elements",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs",
						"refa",
						"elements"
					]
				}
			},
			"response": []
		},
		{
			"name": "update z on master and add element p",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0686db2c-2f1a-412d-928d-965b25a71470",
						"exec": [
							"pm.test(\"response has elements\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.elements.length).to.eql(2);",
							"});",
							"",
							"pm.environment.set(\"commitZP\", pm.response.json().elements[0]._commitId);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"elements\": [\n\t\t{\n\t\t\t\"id\": \"z\",\n\t\t\t\"name\": \"updated6\"\n\t\t},\n\t\t{\n\t\t\t\"id\": \"p\",\n\t\t\t\"name\": \"p\"\n\t\t}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/projects/aa/refs/master/elements",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs",
						"master",
						"elements"
					]
				}
			},
			"response": []
		},
		{
			"name": "check master commit history",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "eb0d752b-95db-466a-a5c2-d9b48cc6c146",
						"exec": [
							"pm.test(\"response has 5 commits\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.commits.length).to.eql(5);",
							"});",
							"",
							"pm.test(\"commit history is right\", function() {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.commits[0].id).to.eql(pm.environment.get(\"commitZP\"))",
							"    pm.expect(jsonData.commits[1].id).to.eql(pm.environment.get(\"commitId4\"))",
							"    pm.expect(jsonData.commits[2].id).to.eql(pm.environment.get(\"commitId3\"))",
							"    pm.expect(jsonData.commits[3].id).to.eql(pm.environment.get(\"commitId2\"))",
							"    pm.expect(jsonData.commits[4].id).to.eql(pm.environment.get(\"commitId1\"))",
							"})",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/projects/aa/refs/master/commits",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs",
						"master",
						"commits"
					]
				}
			},
			"response": []
		},
		{
			"name": "check refa commit history",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "03347469-fdcc-4bef-8a72-02763ee852dd",
						"exec": [
							"pm.test(\"response has 6 commits\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.commits.length).to.eql(6);",
							"});",
							"",
							"pm.test(\"commit history is right\", function() {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.commits[0].id).to.eql(pm.environment.get(\"commitZQRef\"))",
							"    pm.expect(jsonData.commits[1].id).to.eql(pm.environment.get(\"commitXYRef\"))",
							"    pm.expect(jsonData.commits[2].id).to.eql(pm.environment.get(\"commitId4\"))",
							"    pm.expect(jsonData.commits[3].id).to.eql(pm.environment.get(\"commitId3\"))",
							"    pm.expect(jsonData.commits[4].id).to.eql(pm.environment.get(\"commitId2\"))",
							"    pm.expect(jsonData.commits[5].id).to.eql(pm.environment.get(\"commitId1\"))",
							"})",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/projects/aa/refs/refa/commits",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs",
						"refa",
						"commits"
					]
				}
			},
			"response": []
		},
		{
			"name": "check x commit history on refa",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8fe61517-a474-4ca7-91ea-aacfe01bb060",
						"exec": [
							"pm.test(\"response has 3 commits\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.commits.length).to.eql(4);",
							"});",
							"",
							"pm.test(\"commit history is right\", function() {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.commits[0].id).to.eql(pm.environment.get(\"commitXYRef\"))",
							"    pm.expect(jsonData.commits[1].id).to.eql(pm.environment.get(\"commitId3\"))",
							"    pm.expect(jsonData.commits[2].id).to.eql(pm.environment.get(\"commitId2\"))",
							"    pm.expect(jsonData.commits[3].id).to.eql(pm.environment.get(\"commitId1\"))",
							"})",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/projects/aa/refs/refa/elements/x/commits",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs",
						"refa",
						"elements",
						"x",
						"commits"
					]
				}
			},
			"response": []
		},
		{
			"name": "check y commit history on refa",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "cb0e814e-b415-4dfc-88b1-c70aedd0e1d2",
						"exec": [
							"pm.test(\"response has 3 commits\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.commits.length).to.eql(3);",
							"});",
							"",
							"pm.test(\"commit history is right\", function() {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.commits[0].id).to.eql(pm.environment.get(\"commitXYRef\"))",
							"    pm.expect(jsonData.commits[1].id).to.eql(pm.environment.get(\"commitId3\"))",
							"    pm.expect(jsonData.commits[2].id).to.eql(pm.environment.get(\"commitId1\"))",
							"})",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/projects/aa/refs/refa/elements/y/commits",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs",
						"refa",
						"elements",
						"y",
						"commits"
					]
				}
			},
			"response": []
		},
		{
			"name": "check z commit history on refa",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3225e877-45f8-4b8b-81f0-037fab73a0d8",
						"exec": [
							"pm.test(\"response has 3 commits\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.commits.length).to.eql(3);",
							"});",
							"",
							"pm.test(\"commit history is right\", function() {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.commits[0].id).to.eql(pm.environment.get(\"commitZQRef\"))",
							"    pm.expect(jsonData.commits[1].id).to.eql(pm.environment.get(\"commitId4\"))",
							"    pm.expect(jsonData.commits[2].id).to.eql(pm.environment.get(\"commitId1\"))",
							"})",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/projects/aa/refs/refa/elements/z/commits",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs",
						"refa",
						"elements",
						"z",
						"commits"
					]
				}
			},
			"response": []
		},
		{
			"name": "get latest elements at refa",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "2f0cb424-4943-4808-8504-decf5a5f13a0",
						"exec": [
							"pm.test(\"has 4 results\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.elements.length).to.eql(4);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"elements\": [\n\t\t{\n\t\t\t\"id\": \"x\"\n\t\t},\n\t\t{\n\t\t\t\"id\": \"y\"\n\t\t}, {\n\t\t\t\"id\": \"z\"\n\t\t},{\n\t\t\t\"id\": \"q\"\n\t\t}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/projects/aa/refs/refa/elements",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs",
						"refa",
						"elements"
					]
				}
			},
			"response": []
		},
		{
			"name": "get latest elements at master",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3dc49cda-109d-4301-b605-5c34bd2e6356",
						"exec": [
							"pm.test(\"has 4 results\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.elements.length).to.eql(4);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"elements\": [\n\t\t{\n\t\t\t\"id\": \"x\"\n\t\t},\n\t\t{\n\t\t\t\"id\": \"y\"\n\t\t}, {\n\t\t\t\"id\": \"z\"\n\t\t},{\n\t\t\t\"id\": \"q\"\n\t\t}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/projects/aa/refs/master/elements",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs",
						"master",
						"elements"
					]
				}
			},
			"response": []
		},
		{
			"name": "get mix of elements at master with missing",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "89a56141-ec9b-429c-bfa3-36d0e43edfe4",
						"exec": [
							"pm.test(\"has 3 results and 1 rejected\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.elements.length).to.eql(3);",
							"    pm.expect(jsonData.rejected.length).to.eql(1);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"elements\": [\n\t\t{\n\t\t\t\"id\": \"x\"\n\t\t},\n\t\t{\n\t\t\t\"id\": \"y\"\n\t\t}, {\n\t\t\t\"id\": \"z\"\n\t\t},{\n\t\t\t\"id\": \"q\"\n\t\t}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/projects/aa/refs/master/elements",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs",
						"master",
						"elements"
					]
				}
			},
			"response": []
		},
		{
			"name": "get mix of elements at refa with commit",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6ac63f9d-1dec-4f8d-af53-31a821f98803",
						"exec": [
							"pm.test(\"has 3 results and 2 rejected\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.elements.length).to.eql(3);",
							"    pm.expect(jsonData.rejected.length).to.eql(2);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"elements\": [\n\t\t{\n\t\t\t\"id\": \"x\"\n\t\t},\n\t\t{\n\t\t\t\"id\": \"y\"\n\t\t}, {\n\t\t\t\"id\": \"z\"\n\t\t},{\n\t\t\t\"id\": \"q\"\n\t\t}, {\n\t\t\t\"id\": \"p\"\n\t\t}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/projects/aa/refs/refa/elements?commitId={{commitXYRef}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs",
						"refa",
						"elements"
					],
					"query": [
						{
							"key": "commitId",
							"value": "{{commitXYRef}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "delete x on refa",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "64884b31-07b9-45d6-80d9-aaaee57e6cf0",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/projects/aa/refs/refa/elements/x",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs",
						"refa",
						"elements",
						"x"
					]
				}
			},
			"response": []
		},
		{
			"name": "get x on refa deleted",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a5fb1b5b-390a-4238-a587-a8d5f8c2c08c",
						"exec": [
							"pm.test(\"Status code is 410\", function () {",
							"    pm.response.to.have.status(410);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/projects/aa/refs/refa/elements/x",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs",
						"refa",
						"elements",
						"x"
					]
				}
			},
			"response": []
		},
		{
			"name": "resurrect x on refa",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "2891567e-05ac-41db-bbef-a408ae6fb4f4",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"response has element\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.elements.length).to.eql(1);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"elements\": [\n\t\t{\n\t\t\t\"id\": \"x\",\n\t\t\t\"name\": \"updated4\"\n\t\t}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/projects/aa/refs/refa/elements",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs",
						"refa",
						"elements"
					]
				}
			},
			"response": []
		},
		{
			"name": "get resurrected x on refa",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6c242219-5862-44dd-9aa2-cf684c27b485",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"response has element\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.elements.length).to.eql(1);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/projects/aa/refs/refa/elements/x",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs",
						"refa",
						"elements",
						"x"
					]
				}
			},
			"response": []
		},
		{
			"name": "add ownerId for cameo element on refa",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "cc0bb3da-5473-48b8-b706-3f64bedfec62",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"elements\": [\n\t\t{\n\t\t\t\"id\": \"x\",\n\t\t\t\"name\": \"updated7\",\n\t\t\t\"ownerId\": \"z\"\n\t\t}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/projects/aa/refs/refa/elements",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs",
						"refa",
						"elements"
					]
				}
			},
			"response": []
		},
		{
			"name": "add org b",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ea871dc1-9d88-4481-9c1b-2090a25233e9",
						"exec": [
							"pm.test(\"response has org a\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.orgs[0].id).to.eql('b');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"orgs\": [\n\t\t{\n\t\t\t\"id\": \"b\",\n\t\t\t\"name\": \"b\"\n\t\t}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/orgs",
					"host": [
						"{{host}}"
					],
					"path": [
						"orgs"
					]
				}
			},
			"response": []
		},
		{
			"name": "add project cc under org b",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4120ad4c-9cb5-4b51-bf53-f608d68f0298",
						"exec": [
							"pm.test(\"response has project cc\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.projects[0].id).to.eql('cc');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"projects\": [\n\t\t{\n\t\t\t\"id\": \"cc\", \n\t\t\t\"name\": \"cc\",\n\t\t\t\"orgId\": \"b\",\n\t\t\t\"schema\": \"default\"\n\t\t}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/projects",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects"
					]
				}
			},
			"response": []
		},
		{
			"name": "create branch del under cc with no commit",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "cc901e7b-9269-4396-8acb-0606f11dc4db",
						"exec": [
							"",
							"pm.test(\"Status code is 400, cannot make branch in empty project\", function () {",
							"    pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"refs\": [\n\t\t{\n\t\t\t\"id\": \"del\",\n\t\t\t\"name\": \"del\",\n\t\t\t\"type\": \"Branch\"\n\t\t}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/projects/cc/refs",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"cc",
						"refs"
					]
				}
			},
			"response": []
		},
		{
			"name": "make a commit on project cc",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b28e0221-9f3d-49d7-87de-280586509c47",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"elements\": [\n\t\t{\n\t\t\t\"id\": \"random\", \n\t\t\t\"name\": \"random\"\n\t\t}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/projects/cc/refs/master/elements",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"cc",
						"refs",
						"master",
						"elements"
					]
				}
			},
			"response": []
		},
		{
			"name": "create branch del under cc",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "66049694-521b-43cf-92ae-dc6c8cc8405a",
						"exec": [
							"pm.test(\"branch created\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.refs[0].id).to.eql('del');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"refs\": [\n\t\t{\n\t\t\t\"id\": \"del\",\n\t\t\t\"name\": \"del\",\n\t\t\t\"type\": \"Branch\"\n\t\t}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/projects/cc/refs",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"cc",
						"refs"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete branch del",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5043a523-c8be-4509-bc2f-ea8b040a2bf2",
						"exec": [
							"pm.test(\"branch deleted\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.refs[0].id).to.eql('del');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/projects/cc/refs/del",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"cc",
						"refs",
						"del"
					]
				}
			},
			"response": []
		},
		{
			"name": "get deleted branch",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "83c40f4d-cbf7-4e16-8c6f-9931a78df22f",
						"exec": [
							"  ",
							"pm.test(\"Status code is 410\", function () {",
							"    pm.response.to.have.status(410);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/projects/cc/refs/del",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"cc",
						"refs",
						"del"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete branch master",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7b4f2fdb-68d9-4e0e-8980-774baa4f9413",
						"exec": [
							"",
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/projects/cc/refs/master",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"cc",
						"refs",
						"master"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete project cc",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "49b6fb54-9300-4433-983c-8d4ca6a84e35",
						"exec": [
							"pm.test(\"project soft deleted\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.projects[0].id).to.eql('cc');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/projects/cc",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"cc"
					]
				}
			},
			"response": []
		},
		{
			"name": "get project cc",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "cdac43db-2126-404b-af6a-91d4c5eac600",
						"exec": [
							"pm.test(\"Status code is 410\", function () {",
							"    pm.response.to.have.status(410);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/projects/cc",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"cc"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete org b",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "121ac082-4e34-4a42-9fdd-15bb6545898d",
						"exec": [
							"pm.test(\"Status code is 400, org not empty\", function () {",
							"    pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/orgs/b",
					"host": [
						"{{host}}"
					],
					"path": [
						"orgs",
						"b"
					]
				}
			},
			"response": []
		},
		{
			"name": "hard delete project cc",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b5729049-9a5a-4660-b97b-2658d7027f84",
						"exec": [
							"pm.test(\"project hard deleted\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.projects[0].id).to.eql('cc');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/projects/cc?hard=true",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"cc"
					],
					"query": [
						{
							"key": "hard",
							"value": "true"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "delete empty org b",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0a4fcb5e-c5b6-4ea5-b4ec-36babadffaff",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/orgs/b",
					"host": [
						"{{host}}"
					],
					"path": [
						"orgs",
						"b"
					]
				}
			},
			"response": []
		},
		{
			"name": "get org b",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ac5d3658-38e9-423f-b985-d903cceb0740",
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/orgs/b",
					"host": [
						"{{host}}"
					],
					"path": [
						"orgs",
						"b"
					]
				}
			},
			"response": []
		},
		{
			"name": "recreate project cc under org a",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"response has project cc\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.projects[0].id).to.eql('cc');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"projects\": [\n\t\t{\n\t\t\t\"id\": \"cc\", \n\t\t\t\"name\": \"cc\",\n\t\t\t\"orgId\": \"a\",\n\t\t\t\"schema\": \"default\"\n\t\t}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/projects",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects"
					]
				}
			},
			"response": []
		},
		{
			"name": "create webhook on project aa",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "2ba7a873-1bdf-4e86-8329-7069064232a9",
						"exec": [
							"pm.test(\"webhook created with returned id\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.webhooks[0]).to.have.property('id');",
							"});",
							"    ",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"webhooks\": [\n\t\t{\"url\": \"https://random.org\"}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/projects/aa/webhooks",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"webhooks"
					]
				}
			},
			"response": []
		},
		{
			"name": "get webhooks",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8410e98d-60b6-40bf-b17a-91c78b5f1dda",
						"exec": [
							"pm.test(\"project aa has one webhook\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.webhooks[0]).to.have.property('id');",
							"    pm.expect(jsonData.webhooks.length).to.eql(1);",
							"});",
							"    ",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/projects/aa/webhooks",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"webhooks"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete webhook",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e0baf005-f27c-42d9-9763-6b194ecccd3f",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"    ",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"webhooks\": [\n\t\t{\"url\": \"https://random.org\"}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/projects/aa/webhooks",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"webhooks"
					]
				}
			},
			"response": []
		},
		{
			"name": "get webhooks again",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "009db0b6-7e14-42d8-89ae-33cdb7a20a6f",
						"exec": [
							"pm.test(\"project aa has no webhooks\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.webhooks.length).to.eql(0);",
							"});",
							"    ",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/projects/aa/webhooks",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"webhooks"
					]
				}
			},
			"response": []
		},
		{
			"name": "add project with invalid schema",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5d411406-9444-4333-9b15-43c0ae716821",
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"projects\": [\r\n    {\r\n      \"orgId\": \"a\",\r\n      \"name\": \"string\",\r\n      \"id\": \"string\",\r\n      \"schema\":\"invalid\"\r\n    }\r\n  ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/projects",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects"
					]
				}
			},
			"response": []
		},
		{
			"name": "add org c without id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "53ab3019-1cc1-4da3-aece-5c157766f627",
						"exec": [
							"pm.test(\"response has org c\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.orgs[0].name).to.eql('c');",
							"});",
							"",
							"pm.environment.set(\"orgIdC\", pm.response.json().orgs[0].id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"orgs\": [\n\t\t{\n\t\t\t\"name\": \"c\"\n\t\t}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/orgs",
					"host": [
						"{{host}}"
					],
					"path": [
						"orgs"
					]
				}
			},
			"response": []
		},
		{
			"name": "get org c",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8d61501e-4a5b-4a71-9f1d-ad00c75893bd",
						"exec": [
							"pm.test(\"org id number is right\", function() {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.orgs[0].id).to.eql(pm.environment.get(\"orgIdC\"))",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{host}}/orgs/{{orgIdC}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"orgs",
						"{{orgIdC}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "add project random to org c without id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "39291cc7-7dbe-4eb9-ad83-857b839bfda8",
						"exec": [
							"pm.test(\"response has project random\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.projects[0].name).to.eql('random');",
							"});",
							"",
							"pm.environment.set(\"projectRandomId\", pm.response.json().projects[0].id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"projects\": [\n\t\t{\n\t\t\t\"name\": \"random\",\n\t\t\t\"orgId\": \"{{orgIdC}}\"\n\t\t}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/projects",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects"
					]
				}
			},
			"response": []
		},
        {
            "name": "get org c projects",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"response has 1 project random\", function () {",
                            "    var jsonData = pm.response.json();",
                            "    pm.expect(jsonData.projects.length).to.eql(1);",
                            "    pm.expect(jsonData.projects[0].name).to.eql('random');",
                            "});"
                        ],
                        "type": "text/javascript"
                    }
                }
            ],
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "request": {
                "method": "GET",
                "header": [
                    {
                        "key": "Content-Type",
                        "type": "text",
                        "value": "application/json",
                        "disabled": true
                    }
                ],
                "body": {
                    "mode": "raw",
                    "raw": ""
                },
                "url": {
                    "raw": "{{host}}/projects?orgId={{orgIdC}}",
                    "host": [
                        "{{host}}"
                    ],
                    "path": [
                        "projects"
                    ],
                    "query": [
                        {
                            "key": "orgId",
                            "value": "{{orgIdC}}"
                        }
                    ]
                }
            },
            "response": []
        },
		{
			"name": "add element random to project random without id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4c60e596-758d-4347-8a0c-ef9071a78421",
						"exec": [
							"pm.test(\"response has element random\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.elements[0].name).to.eql('random');",
							"});",
							"",
							"pm.environment.set(\"elementRandomId\", pm.response.json().elements[0].id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"elements\": [\n\t\t{\n\t\t\t\"name\": \"random\"\n\t\t}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/projects/{{projectRandomId}}/refs/master/elements",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"{{projectRandomId}}",
						"refs",
						"master",
						"elements"
					]
				}
			},
			"response": []
		},
		{
			"name": "create ref without id on project random",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "fa70a5cd-4079-4216-b4f6-b4202c26cfc0",
						"exec": [
							"pm.test(\"response has ref random\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.refs[0].name).to.eql('random');",
							"});",
							"",
							"pm.environment.set(\"refRandomId\", pm.response.json().refs[0].id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"refs\": [\n\t\t{\n\t\t\t\"name\": \"random\"\n\t\t}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/projects/{{projectRandomId}}/refs",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"{{projectRandomId}}",
						"refs"
					]
				}
			},
			"response": []
		},
		{
			"name": "get random element in random ref",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e1a34e6f-ae27-4a4f-8294-a7c9f86d9512",
						"exec": [
							"pm.test(\"element is there\", function() {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.elements[0].name).to.eql('random');",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{host}}/projects/{{projectRandomId}}/refs/{{refRandomId}}/elements/{{elementRandomId}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"{{projectRandomId}}",
						"refs",
						"{{refRandomId}}",
						"elements",
						"{{elementRandomId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "add project to nonexistent org",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "90859114-65cc-41c2-8b34-015f1464201a",
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"projects\": [\n\t\t{\n\t\t\t\"name\": \"bad\",\n\t\t\t\"orgId\": \"missing\"\n\t\t}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/projects",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects"
					]
				}
			},
			"response": []
		},
		{
			"name": "add project without org",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c410396b-451f-4120-bbd6-69fa66effe42",
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"projects\": [\n\t\t{\n\t\t\t\"name\": \"bad\"\n\t\t}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/projects",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects"
					]
				}
			},
			"response": []
		},
		{
			"name": "create branch from commit",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "bfbfce50-298d-4d87-b403-951ab3e2f574",
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"refs\": [\n\t\t{\n\t\t\t\"name\": \"bad\",\n\t\t\t\"parentCommitId\": \"bad\"\n\t\t}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/projects/aa/refs",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs"
					]
				}
			},
			"response": []
		},
		{
			"name": "create branch from nonexistent ref",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c140808f-619f-4b5e-ab06-ae1124039678",
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"refs\": [\n\t\t{\n\t\t\t\"name\": \"bad\",\n\t\t\t\"parentRefId\": \"missing\"\n\t\t}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/projects/aa/refs",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs"
					]
				}
			},
			"response": []
		},
		{
			"name": "post elements to nonexistent project",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "563236de-9fa5-4902-aa08-b271cdee278e",
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"elements\": [\n\t\t{\n\t\t\t\"name\": \"bad\"\n\t\t}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/projects/aaa/refs/master/elements",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aaa",
						"refs",
						"master",
						"elements"
					]
				}
			},
			"response": []
		},
		{
			"name": "post elements to nonexistent ref",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9f8b1c3b-629e-4080-bd96-c7ea7a29faf0",
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"elements\": [\n\t\t{\n\t\t\t\"name\": \"bad\"\n\t\t}\n\t]\n}"
				},
				"url": {
					"raw": "{{host}}/projects/aa/refs/missing/elements",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs",
						"missing",
						"elements"
					]
				}
			},
			"response": []
		},
		{
			"name": "get nonexistent project",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f9e479b7-97e5-41f2-b801-7c1f7f4553ec",
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{host}}/projects/zz",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"zz"
					]
				}
			},
			"response": []
		},
		{
			"name": "get nonexistent ref",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "58d3d7d2-416b-4ac3-8933-7b54c2691fd4",
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{host}}/projects/aa/refs/missing",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs",
						"missing"
					]
				}
			},
			"response": []
		},
		{
			"name": "get element in nonexistent ref",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5eacc2a2-caea-4256-aa97-bf6e50bd3b68",
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{host}}/projects/aa/refs/missing/elements/asdf",
					"host": [
						"{{host}}"
					],
					"path": [
						"projects",
						"aa",
						"refs",
						"missing",
						"elements",
						"asdf"
					]
				}
			},
			"response": []
		},
        {
            "name": "get nonexistent commit",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status code is 404\", function () {",
                            "    pm.response.to.have.status(404);",
                            "});"
                        ],
                        "type": "text/javascript"
                    }
                }
            ],
            "request": {
                "method": "GET",
                "header": [
                    {
                        "key": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                    }
                ],
                "url": {
                    "raw": "{{host}}/projects/aa/commits/missing",
                    "host": [
                        "{{host}}"
                    ],
                    "path": [
                        "projects",
                        "aa",
                        "commits",
                        "missing"
                    ]
                }
            },
            "response": []
        },
        {
            "name": "create branch with long id",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status code is 200\", function () {",
                            "    pm.response.to.have.status(200);",
                            "});"
                        ],
                        "type": "text/javascript"
                    }
                }
            ],
            "request": {
                "method": "POST",
                "header": [
                    {
                        "key": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                    }
                ],
                "body": {
                    "mode": "raw",
                    "raw": "{\n\t\"refs\": [\n\t\t{\n\t\t\t\"name\": \"long\",\n            \"id\": \"a123456789012345678901234567890123456789012345678901234567890\"\n\t\t}\n\t]\n}"
                },
                "url": {
                    "raw": "{{host}}/projects/aa/refs",
                    "host": [
                        "{{host}}"
                    ],
                    "path": [
                        "projects",
                        "aa",
                        "refs"
                    ]
                }
            },
            "response": []
        },
        {
            "name": "post to long branch",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status code is 200\", function () {",
                            "    pm.response.to.have.status(200);",
                            "});"
                        ],
                        "type": "text/javascript"
                    }
                }
            ],
            "request": {
                "method": "POST",
                "header": [
                    {
                        "key": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                    }
                ],
                "body": {
                    "mode": "raw",
                    "raw": "{\n\t\"elements\": [\n\t\t{\n\t\t\t\"name\": \"blah\",\n\t\t\t\"id\": \"blah\"\n\t\t}\n\t]\n}"
                },
                "url": {
                    "raw": "{{host}}/projects/aa/refs/a123456789012345678901234567890123456789012345678901234567890/elements",
                    "host": [
                        "{{host}}"
                    ],
                    "path": [
                        "projects",
                        "aa",
                        "refs",
                        "a123456789012345678901234567890123456789012345678901234567890",
                        "elements"
                    ]
                }
            },
            "response": []
        },
        {
            "name": "create project zz",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status code is 200\", function () {",
                            "    pm.response.to.have.status(200);",
                            "});"
                        ],
                        "type": "text/javascript"
                    }
                }
            ],
            "request": {
                "method": "POST",
                "header": [
                    {
                        "key": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                    }
                ],
                "body": {
                    "mode": "raw",
                    "raw": "{\n\t\"projects\": [\n\t\t{\n\t\t\t\"id\": \"zz\", \n\t\t\t\"name\": \"zz\",\n\t\t\t\"orgId\": \"a\",\n\t\t\t\"schema\": \"default\"\n\t\t}\n\t]\n}"
                },
                "url": {
                    "raw": "{{host}}/projects",
                    "host": [
                        "{{host}}"
                    ],
                    "path": [
                        "projects"
                    ]
                }
            },
            "response": []
        },
        {
            "name": "add elements to project zz",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status code is 200\", function () {",
                            "    pm.response.to.have.status(200);",
                            "});"
                        ],
                        "type": "text/javascript"
                    }
                }
            ],
            "request": {
                "method": "POST",
                "header": [
                    {
                        "key": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                    }
                ],
                "body": {
                    "mode": "raw",
                    "raw": "{\n\t\"elements\": [\n\t\t{\n\t\t\t\"id\": \"x\",\n\t\t\t\"name\": \"x\"\n\t\t}, {\n\t\t\t\"id\": \"y\", \n\t\t\t\"name\": \"y\"\n\t\t}, {\n\t\t\t\"id\": \"z\",\n\t\t\t\"name\": \"z\"\n\t\t}\n\t]\n}"
                },
                "url": {
                    "raw": "{{host}}/projects/zz/refs/master/elements",
                    "host": [
                        "{{host}}"
                    ],
                    "path": [
                        "projects",
                        "zz",
                        "refs",
                        "master",
                        "elements"
                    ]
                }
            },
            "response": []
        },
        {
            "name": "update and delete elements in same commit",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"response has elements\", function () {",
                            "    var jsonData = pm.response.json();",
                            "    pm.expect(jsonData.elements.length).to.eql(2);",
                            "    pm.expect(jsonData.deleted.length).to.eql(1);",
                            "});",
                            "",
                            "pm.environment.set(\"hybridCommit\", pm.response.json().commitId);"
                        ],
                        "type": "text/javascript"
                    }
                }
            ],
            "request": {
                "method": "POST",
                "header": [
                    {
                        "key": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                    }
                ],
                "body": {
                    "mode": "raw",
                    "raw": "{\n\t\"elements\": [\n\t\t{\n\t\t\t\"id\": \"x\",\n\t\t\t\"name\": \"xx\"\n\t\t}, {\n\t\t\t\"id\": \"y\", \n\t\t\t\"name\": \"yy\"\n\t\t}\n\t],\n    \"deletes\": [{\"id\": \"z\"}]\n}"
                },
                "url": {
                    "raw": "{{host}}/projects/zz/refs/master/elements",
                    "host": [
                        "{{host}}"
                    ],
                    "path": [
                        "projects",
                        "zz",
                        "refs",
                        "master",
                        "elements"
                    ]
                }
            },
            "response": []
        },
        {
            "name": "get deleted element",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status code is 410\", function () {",
                            "    pm.response.to.have.status(410);",
                            "});"
                        ],
                        "type": "text/javascript"
                    }
                }
            ],
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "request": {
                "method": "GET",
                "header": [
                    {
                        "key": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                    }
                ],
                "body": {
                    "mode": "raw",
                    "raw": "{\n\t\"elements\": [\n\t\t{\n\t\t\t\"id\": \"x\",\n\t\t\t\"name\": \"xx\"\n\t\t}, {\n\t\t\t\"id\": \"y\", \n\t\t\t\"name\": \"yy\"\n\t\t}\n\t],\n    \"deletes\": [{\"id\": \"z\"}]\n}"
                },
                "url": {
                    "raw": "{{host}}/projects/zz/refs/master/elements/z",
                    "host": [
                        "{{host}}"
                    ],
                    "path": [
                        "projects",
                        "zz",
                        "refs",
                        "master",
                        "elements",
                        "z"
                    ]
                }
            },
            "response": []
        },
        {
            "name": "get commit object",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"commit has right data\", function () {",
                            "    var jsonData = pm.response.json();",
                            "    pm.expect(jsonData.commits[0].updated.length).to.eql(2);",
                            "    pm.expect(jsonData.commits[0].deleted.length).to.eql(1);",
                            "",
                            "});",
                            "",
                            ""
                        ],
                        "type": "text/javascript"
                    }
                }
            ],
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "request": {
                "method": "GET",
                "header": [
                    {
                        "key": "Content-Type",
                        "type": "text",
                        "value": "application/json"
                    }
                ],
                "body": {
                    "mode": "raw",
                    "raw": "{\n\t\"elements\": [\n\t\t{\n\t\t\t\"id\": \"x\",\n\t\t\t\"name\": \"xx\"\n\t\t}, {\n\t\t\t\"id\": \"y\", \n\t\t\t\"name\": \"yy\"\n\t\t}\n\t],\n    \"deletes\": [{\"id\": \"z\"}]\n}"
                },
                "url": {
                    "raw": "{{host}}/projects/zz/commits/{{hybridCommit}}",
                    "host": [
                        "{{host}}"
                    ],
                    "path": [
                        "projects",
                        "zz",
                        "commits",
                        "{{hybridCommit}}"
                    ]
                }
            },
            "response": []
        }
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "cd69ddc1-20da-4c86-919c-ad9bf455d71d",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "480b7515-91c4-49b1-9bee-f5af24bb9524",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}